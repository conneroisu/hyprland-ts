name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run unit tests
      run: npm run test:run
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: ${{ !env.ACT }}
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: ${{ always() && !env.ACT }}
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          test-results.json
          test-results.html
          coverage/
        retention-days: 30
        
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run performance tests
      run: npm test -- --run src/performance.test.ts
      
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: ${{ !env.ACT }}
      with:
        name: performance-results
        path: test-results.json
        retention-days: 30
        
  property-based:
    name: Property-Based Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run property-based tests
      run: npm test -- --run src/property.test.ts
      
    - name: Upload property test results
      uses: actions/upload-artifact@v4
      if: ${{ !env.ACT }}
      with:
        name: property-test-results
        path: test-results.json
        retention-days: 30
        
  edge-cases:
    name: Edge Case Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run edge case tests
      run: npm test -- --run src/edge-cases.test.ts
      
    - name: Upload edge case results
      uses: actions/upload-artifact@v4
      if: ${{ !env.ACT }}
      with:
        name: edge-case-results
        path: test-results.json
        retention-days: 30
        
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run integration tests
      run: npm test -- --run src/integration.test.ts
      
    - name: Upload integration results
      uses: actions/upload-artifact@v4
      if: ${{ !env.ACT }}
      with:
        name: integration-results
        path: test-results.json
        retention-days: 30
        
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: npm run build
      
    - name: Test built package
      run: |
        # Test that the built package can be imported
        node -e "const pkg = require('./dist/index.cjs'); console.log('CJS import successful');"
        node --input-type=module -e "import('./dist/index.js').then(() => console.log('ESM import successful'));"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: ${{ !env.ACT }}
      with:
        name: build-artifacts
        path: dist/
        retention-days: 7
        
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run npm audit fix (if needed)
      run: npm audit fix --dry-run
      
  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, performance, property-based, edge-cases, integration, build-test, security]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      if: ${{ !env.ACT }}
      
    - name: Create test summary
      run: |
        echo "# Test Suite Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- Unit Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Performance Tests: ${{ needs.performance.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Property-Based Tests: ${{ needs.property-based.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Edge Case Tests: ${{ needs.edge-cases.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Integration Tests: ${{ needs.integration.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Build Test: ${{ needs.build-test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Security Audit: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All test artifacts have been uploaded and are available for download." >> $GITHUB_STEP_SUMMARY
